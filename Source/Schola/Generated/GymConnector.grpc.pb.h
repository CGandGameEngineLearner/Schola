// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: GymConnector.proto
#ifndef GRPC_GymConnector_2eproto__INCLUDED
#define GRPC_GymConnector_2eproto__INCLUDED

#include "GymConnector.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace Schola {

class GymService final {
 public:
  static constexpr char const* service_full_name() {
    return "Schola.GymService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status UpdateState(::grpc::ClientContext* context, const ::Schola::TrainingStateUpdate& request, ::Schola::TrainingState* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Schola::TrainingState>> AsyncUpdateState(::grpc::ClientContext* context, const ::Schola::TrainingStateUpdate& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Schola::TrainingState>>(AsyncUpdateStateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Schola::TrainingState>> PrepareAsyncUpdateState(::grpc::ClientContext* context, const ::Schola::TrainingStateUpdate& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Schola::TrainingState>>(PrepareAsyncUpdateStateRaw(context, request, cq));
    }
    virtual ::grpc::Status RequestInitialTrainingState(::grpc::ClientContext* context, const ::Schola::InitialTrainingStateRequest& request, ::Schola::InitialTrainingState* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Schola::InitialTrainingState>> AsyncRequestInitialTrainingState(::grpc::ClientContext* context, const ::Schola::InitialTrainingStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Schola::InitialTrainingState>>(AsyncRequestInitialTrainingStateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Schola::InitialTrainingState>> PrepareAsyncRequestInitialTrainingState(::grpc::ClientContext* context, const ::Schola::InitialTrainingStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Schola::InitialTrainingState>>(PrepareAsyncRequestInitialTrainingStateRaw(context, request, cq));
    }
    virtual ::grpc::Status RequestTrainingDefinition(::grpc::ClientContext* context, const ::Schola::TrainingDefinitionRequest& request, ::Schola::TrainingDefinition* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Schola::TrainingDefinition>> AsyncRequestTrainingDefinition(::grpc::ClientContext* context, const ::Schola::TrainingDefinitionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Schola::TrainingDefinition>>(AsyncRequestTrainingDefinitionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Schola::TrainingDefinition>> PrepareAsyncRequestTrainingDefinition(::grpc::ClientContext* context, const ::Schola::TrainingDefinitionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Schola::TrainingDefinition>>(PrepareAsyncRequestTrainingDefinitionRaw(context, request, cq));
    }
    virtual ::grpc::Status StartGymConnector(::grpc::ClientContext* context, const ::Schola::GymConnectorStartRequest& request, ::Schola::GymConnectorStartResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Schola::GymConnectorStartResponse>> AsyncStartGymConnector(::grpc::ClientContext* context, const ::Schola::GymConnectorStartRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Schola::GymConnectorStartResponse>>(AsyncStartGymConnectorRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Schola::GymConnectorStartResponse>> PrepareAsyncStartGymConnector(::grpc::ClientContext* context, const ::Schola::GymConnectorStartRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Schola::GymConnectorStartResponse>>(PrepareAsyncStartGymConnectorRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void UpdateState(::grpc::ClientContext* context, const ::Schola::TrainingStateUpdate* request, ::Schola::TrainingState* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateState(::grpc::ClientContext* context, const ::Schola::TrainingStateUpdate* request, ::Schola::TrainingState* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void RequestInitialTrainingState(::grpc::ClientContext* context, const ::Schola::InitialTrainingStateRequest* request, ::Schola::InitialTrainingState* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RequestInitialTrainingState(::grpc::ClientContext* context, const ::Schola::InitialTrainingStateRequest* request, ::Schola::InitialTrainingState* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void RequestTrainingDefinition(::grpc::ClientContext* context, const ::Schola::TrainingDefinitionRequest* request, ::Schola::TrainingDefinition* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RequestTrainingDefinition(::grpc::ClientContext* context, const ::Schola::TrainingDefinitionRequest* request, ::Schola::TrainingDefinition* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void StartGymConnector(::grpc::ClientContext* context, const ::Schola::GymConnectorStartRequest* request, ::Schola::GymConnectorStartResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void StartGymConnector(::grpc::ClientContext* context, const ::Schola::GymConnectorStartRequest* request, ::Schola::GymConnectorStartResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Schola::TrainingState>* AsyncUpdateStateRaw(::grpc::ClientContext* context, const ::Schola::TrainingStateUpdate& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Schola::TrainingState>* PrepareAsyncUpdateStateRaw(::grpc::ClientContext* context, const ::Schola::TrainingStateUpdate& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Schola::InitialTrainingState>* AsyncRequestInitialTrainingStateRaw(::grpc::ClientContext* context, const ::Schola::InitialTrainingStateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Schola::InitialTrainingState>* PrepareAsyncRequestInitialTrainingStateRaw(::grpc::ClientContext* context, const ::Schola::InitialTrainingStateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Schola::TrainingDefinition>* AsyncRequestTrainingDefinitionRaw(::grpc::ClientContext* context, const ::Schola::TrainingDefinitionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Schola::TrainingDefinition>* PrepareAsyncRequestTrainingDefinitionRaw(::grpc::ClientContext* context, const ::Schola::TrainingDefinitionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Schola::GymConnectorStartResponse>* AsyncStartGymConnectorRaw(::grpc::ClientContext* context, const ::Schola::GymConnectorStartRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Schola::GymConnectorStartResponse>* PrepareAsyncStartGymConnectorRaw(::grpc::ClientContext* context, const ::Schola::GymConnectorStartRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status UpdateState(::grpc::ClientContext* context, const ::Schola::TrainingStateUpdate& request, ::Schola::TrainingState* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Schola::TrainingState>> AsyncUpdateState(::grpc::ClientContext* context, const ::Schola::TrainingStateUpdate& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Schola::TrainingState>>(AsyncUpdateStateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Schola::TrainingState>> PrepareAsyncUpdateState(::grpc::ClientContext* context, const ::Schola::TrainingStateUpdate& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Schola::TrainingState>>(PrepareAsyncUpdateStateRaw(context, request, cq));
    }
    ::grpc::Status RequestInitialTrainingState(::grpc::ClientContext* context, const ::Schola::InitialTrainingStateRequest& request, ::Schola::InitialTrainingState* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Schola::InitialTrainingState>> AsyncRequestInitialTrainingState(::grpc::ClientContext* context, const ::Schola::InitialTrainingStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Schola::InitialTrainingState>>(AsyncRequestInitialTrainingStateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Schola::InitialTrainingState>> PrepareAsyncRequestInitialTrainingState(::grpc::ClientContext* context, const ::Schola::InitialTrainingStateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Schola::InitialTrainingState>>(PrepareAsyncRequestInitialTrainingStateRaw(context, request, cq));
    }
    ::grpc::Status RequestTrainingDefinition(::grpc::ClientContext* context, const ::Schola::TrainingDefinitionRequest& request, ::Schola::TrainingDefinition* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Schola::TrainingDefinition>> AsyncRequestTrainingDefinition(::grpc::ClientContext* context, const ::Schola::TrainingDefinitionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Schola::TrainingDefinition>>(AsyncRequestTrainingDefinitionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Schola::TrainingDefinition>> PrepareAsyncRequestTrainingDefinition(::grpc::ClientContext* context, const ::Schola::TrainingDefinitionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Schola::TrainingDefinition>>(PrepareAsyncRequestTrainingDefinitionRaw(context, request, cq));
    }
    ::grpc::Status StartGymConnector(::grpc::ClientContext* context, const ::Schola::GymConnectorStartRequest& request, ::Schola::GymConnectorStartResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Schola::GymConnectorStartResponse>> AsyncStartGymConnector(::grpc::ClientContext* context, const ::Schola::GymConnectorStartRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Schola::GymConnectorStartResponse>>(AsyncStartGymConnectorRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Schola::GymConnectorStartResponse>> PrepareAsyncStartGymConnector(::grpc::ClientContext* context, const ::Schola::GymConnectorStartRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Schola::GymConnectorStartResponse>>(PrepareAsyncStartGymConnectorRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void UpdateState(::grpc::ClientContext* context, const ::Schola::TrainingStateUpdate* request, ::Schola::TrainingState* response, std::function<void(::grpc::Status)>) override;
      void UpdateState(::grpc::ClientContext* context, const ::Schola::TrainingStateUpdate* request, ::Schola::TrainingState* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RequestInitialTrainingState(::grpc::ClientContext* context, const ::Schola::InitialTrainingStateRequest* request, ::Schola::InitialTrainingState* response, std::function<void(::grpc::Status)>) override;
      void RequestInitialTrainingState(::grpc::ClientContext* context, const ::Schola::InitialTrainingStateRequest* request, ::Schola::InitialTrainingState* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RequestTrainingDefinition(::grpc::ClientContext* context, const ::Schola::TrainingDefinitionRequest* request, ::Schola::TrainingDefinition* response, std::function<void(::grpc::Status)>) override;
      void RequestTrainingDefinition(::grpc::ClientContext* context, const ::Schola::TrainingDefinitionRequest* request, ::Schola::TrainingDefinition* response, ::grpc::ClientUnaryReactor* reactor) override;
      void StartGymConnector(::grpc::ClientContext* context, const ::Schola::GymConnectorStartRequest* request, ::Schola::GymConnectorStartResponse* response, std::function<void(::grpc::Status)>) override;
      void StartGymConnector(::grpc::ClientContext* context, const ::Schola::GymConnectorStartRequest* request, ::Schola::GymConnectorStartResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::Schola::TrainingState>* AsyncUpdateStateRaw(::grpc::ClientContext* context, const ::Schola::TrainingStateUpdate& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::Schola::TrainingState>* PrepareAsyncUpdateStateRaw(::grpc::ClientContext* context, const ::Schola::TrainingStateUpdate& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::Schola::InitialTrainingState>* AsyncRequestInitialTrainingStateRaw(::grpc::ClientContext* context, const ::Schola::InitialTrainingStateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::Schola::InitialTrainingState>* PrepareAsyncRequestInitialTrainingStateRaw(::grpc::ClientContext* context, const ::Schola::InitialTrainingStateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::Schola::TrainingDefinition>* AsyncRequestTrainingDefinitionRaw(::grpc::ClientContext* context, const ::Schola::TrainingDefinitionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::Schola::TrainingDefinition>* PrepareAsyncRequestTrainingDefinitionRaw(::grpc::ClientContext* context, const ::Schola::TrainingDefinitionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::Schola::GymConnectorStartResponse>* AsyncStartGymConnectorRaw(::grpc::ClientContext* context, const ::Schola::GymConnectorStartRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::Schola::GymConnectorStartResponse>* PrepareAsyncStartGymConnectorRaw(::grpc::ClientContext* context, const ::Schola::GymConnectorStartRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateState_;
    const ::grpc::internal::RpcMethod rpcmethod_RequestInitialTrainingState_;
    const ::grpc::internal::RpcMethod rpcmethod_RequestTrainingDefinition_;
    const ::grpc::internal::RpcMethod rpcmethod_StartGymConnector_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status UpdateState(::grpc::ServerContext* context, const ::Schola::TrainingStateUpdate* request, ::Schola::TrainingState* response);
    virtual ::grpc::Status RequestInitialTrainingState(::grpc::ServerContext* context, const ::Schola::InitialTrainingStateRequest* request, ::Schola::InitialTrainingState* response);
    virtual ::grpc::Status RequestTrainingDefinition(::grpc::ServerContext* context, const ::Schola::TrainingDefinitionRequest* request, ::Schola::TrainingDefinition* response);
    virtual ::grpc::Status StartGymConnector(::grpc::ServerContext* context, const ::Schola::GymConnectorStartRequest* request, ::Schola::GymConnectorStartResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateState() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_UpdateState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateState(::grpc::ServerContext* /*context*/, const ::Schola::TrainingStateUpdate* /*request*/, ::Schola::TrainingState* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateState(::grpc::ServerContext* context, ::Schola::TrainingStateUpdate* request, ::grpc::ServerAsyncResponseWriter< ::Schola::TrainingState>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RequestInitialTrainingState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RequestInitialTrainingState() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_RequestInitialTrainingState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RequestInitialTrainingState(::grpc::ServerContext* /*context*/, const ::Schola::InitialTrainingStateRequest* /*request*/, ::Schola::InitialTrainingState* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRequestInitialTrainingState(::grpc::ServerContext* context, ::Schola::InitialTrainingStateRequest* request, ::grpc::ServerAsyncResponseWriter< ::Schola::InitialTrainingState>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RequestTrainingDefinition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RequestTrainingDefinition() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_RequestTrainingDefinition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RequestTrainingDefinition(::grpc::ServerContext* /*context*/, const ::Schola::TrainingDefinitionRequest* /*request*/, ::Schola::TrainingDefinition* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRequestTrainingDefinition(::grpc::ServerContext* context, ::Schola::TrainingDefinitionRequest* request, ::grpc::ServerAsyncResponseWriter< ::Schola::TrainingDefinition>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StartGymConnector : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StartGymConnector() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_StartGymConnector() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartGymConnector(::grpc::ServerContext* /*context*/, const ::Schola::GymConnectorStartRequest* /*request*/, ::Schola::GymConnectorStartResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStartGymConnector(::grpc::ServerContext* context, ::Schola::GymConnectorStartRequest* request, ::grpc::ServerAsyncResponseWriter< ::Schola::GymConnectorStartResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_UpdateState<WithAsyncMethod_RequestInitialTrainingState<WithAsyncMethod_RequestTrainingDefinition<WithAsyncMethod_StartGymConnector<Service > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_UpdateState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateState() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::Schola::TrainingStateUpdate, ::Schola::TrainingState>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::Schola::TrainingStateUpdate* request, ::Schola::TrainingState* response) { return this->UpdateState(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateState(
        ::grpc::MessageAllocator< ::Schola::TrainingStateUpdate, ::Schola::TrainingState>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::Schola::TrainingStateUpdate, ::Schola::TrainingState>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateState(::grpc::ServerContext* /*context*/, const ::Schola::TrainingStateUpdate* /*request*/, ::Schola::TrainingState* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateState(
      ::grpc::CallbackServerContext* /*context*/, const ::Schola::TrainingStateUpdate* /*request*/, ::Schola::TrainingState* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RequestInitialTrainingState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RequestInitialTrainingState() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::Schola::InitialTrainingStateRequest, ::Schola::InitialTrainingState>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::Schola::InitialTrainingStateRequest* request, ::Schola::InitialTrainingState* response) { return this->RequestInitialTrainingState(context, request, response); }));}
    void SetMessageAllocatorFor_RequestInitialTrainingState(
        ::grpc::MessageAllocator< ::Schola::InitialTrainingStateRequest, ::Schola::InitialTrainingState>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::Schola::InitialTrainingStateRequest, ::Schola::InitialTrainingState>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RequestInitialTrainingState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RequestInitialTrainingState(::grpc::ServerContext* /*context*/, const ::Schola::InitialTrainingStateRequest* /*request*/, ::Schola::InitialTrainingState* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RequestInitialTrainingState(
      ::grpc::CallbackServerContext* /*context*/, const ::Schola::InitialTrainingStateRequest* /*request*/, ::Schola::InitialTrainingState* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RequestTrainingDefinition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RequestTrainingDefinition() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::Schola::TrainingDefinitionRequest, ::Schola::TrainingDefinition>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::Schola::TrainingDefinitionRequest* request, ::Schola::TrainingDefinition* response) { return this->RequestTrainingDefinition(context, request, response); }));}
    void SetMessageAllocatorFor_RequestTrainingDefinition(
        ::grpc::MessageAllocator< ::Schola::TrainingDefinitionRequest, ::Schola::TrainingDefinition>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::Schola::TrainingDefinitionRequest, ::Schola::TrainingDefinition>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RequestTrainingDefinition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RequestTrainingDefinition(::grpc::ServerContext* /*context*/, const ::Schola::TrainingDefinitionRequest* /*request*/, ::Schola::TrainingDefinition* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RequestTrainingDefinition(
      ::grpc::CallbackServerContext* /*context*/, const ::Schola::TrainingDefinitionRequest* /*request*/, ::Schola::TrainingDefinition* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_StartGymConnector : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_StartGymConnector() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::Schola::GymConnectorStartRequest, ::Schola::GymConnectorStartResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::Schola::GymConnectorStartRequest* request, ::Schola::GymConnectorStartResponse* response) { return this->StartGymConnector(context, request, response); }));}
    void SetMessageAllocatorFor_StartGymConnector(
        ::grpc::MessageAllocator< ::Schola::GymConnectorStartRequest, ::Schola::GymConnectorStartResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::Schola::GymConnectorStartRequest, ::Schola::GymConnectorStartResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_StartGymConnector() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartGymConnector(::grpc::ServerContext* /*context*/, const ::Schola::GymConnectorStartRequest* /*request*/, ::Schola::GymConnectorStartResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StartGymConnector(
      ::grpc::CallbackServerContext* /*context*/, const ::Schola::GymConnectorStartRequest* /*request*/, ::Schola::GymConnectorStartResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_UpdateState<WithCallbackMethod_RequestInitialTrainingState<WithCallbackMethod_RequestTrainingDefinition<WithCallbackMethod_StartGymConnector<Service > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_UpdateState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateState() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_UpdateState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateState(::grpc::ServerContext* /*context*/, const ::Schola::TrainingStateUpdate* /*request*/, ::Schola::TrainingState* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RequestInitialTrainingState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RequestInitialTrainingState() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_RequestInitialTrainingState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RequestInitialTrainingState(::grpc::ServerContext* /*context*/, const ::Schola::InitialTrainingStateRequest* /*request*/, ::Schola::InitialTrainingState* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RequestTrainingDefinition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RequestTrainingDefinition() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_RequestTrainingDefinition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RequestTrainingDefinition(::grpc::ServerContext* /*context*/, const ::Schola::TrainingDefinitionRequest* /*request*/, ::Schola::TrainingDefinition* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StartGymConnector : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StartGymConnector() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_StartGymConnector() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartGymConnector(::grpc::ServerContext* /*context*/, const ::Schola::GymConnectorStartRequest* /*request*/, ::Schola::GymConnectorStartResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateState() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_UpdateState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateState(::grpc::ServerContext* /*context*/, const ::Schola::TrainingStateUpdate* /*request*/, ::Schola::TrainingState* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateState(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RequestInitialTrainingState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RequestInitialTrainingState() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_RequestInitialTrainingState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RequestInitialTrainingState(::grpc::ServerContext* /*context*/, const ::Schola::InitialTrainingStateRequest* /*request*/, ::Schola::InitialTrainingState* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRequestInitialTrainingState(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RequestTrainingDefinition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RequestTrainingDefinition() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_RequestTrainingDefinition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RequestTrainingDefinition(::grpc::ServerContext* /*context*/, const ::Schola::TrainingDefinitionRequest* /*request*/, ::Schola::TrainingDefinition* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRequestTrainingDefinition(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StartGymConnector : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StartGymConnector() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_StartGymConnector() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartGymConnector(::grpc::ServerContext* /*context*/, const ::Schola::GymConnectorStartRequest* /*request*/, ::Schola::GymConnectorStartResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStartGymConnector(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateState() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateState(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateState(::grpc::ServerContext* /*context*/, const ::Schola::TrainingStateUpdate* /*request*/, ::Schola::TrainingState* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateState(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RequestInitialTrainingState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RequestInitialTrainingState() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RequestInitialTrainingState(context, request, response); }));
    }
    ~WithRawCallbackMethod_RequestInitialTrainingState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RequestInitialTrainingState(::grpc::ServerContext* /*context*/, const ::Schola::InitialTrainingStateRequest* /*request*/, ::Schola::InitialTrainingState* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RequestInitialTrainingState(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RequestTrainingDefinition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RequestTrainingDefinition() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RequestTrainingDefinition(context, request, response); }));
    }
    ~WithRawCallbackMethod_RequestTrainingDefinition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RequestTrainingDefinition(::grpc::ServerContext* /*context*/, const ::Schola::TrainingDefinitionRequest* /*request*/, ::Schola::TrainingDefinition* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RequestTrainingDefinition(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_StartGymConnector : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_StartGymConnector() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->StartGymConnector(context, request, response); }));
    }
    ~WithRawCallbackMethod_StartGymConnector() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartGymConnector(::grpc::ServerContext* /*context*/, const ::Schola::GymConnectorStartRequest* /*request*/, ::Schola::GymConnectorStartResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StartGymConnector(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateState() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::Schola::TrainingStateUpdate, ::Schola::TrainingState>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::Schola::TrainingStateUpdate, ::Schola::TrainingState>* streamer) {
                       return this->StreamedUpdateState(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateState(::grpc::ServerContext* /*context*/, const ::Schola::TrainingStateUpdate* /*request*/, ::Schola::TrainingState* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateState(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::Schola::TrainingStateUpdate,::Schola::TrainingState>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RequestInitialTrainingState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RequestInitialTrainingState() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::Schola::InitialTrainingStateRequest, ::Schola::InitialTrainingState>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::Schola::InitialTrainingStateRequest, ::Schola::InitialTrainingState>* streamer) {
                       return this->StreamedRequestInitialTrainingState(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RequestInitialTrainingState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RequestInitialTrainingState(::grpc::ServerContext* /*context*/, const ::Schola::InitialTrainingStateRequest* /*request*/, ::Schola::InitialTrainingState* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRequestInitialTrainingState(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::Schola::InitialTrainingStateRequest,::Schola::InitialTrainingState>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RequestTrainingDefinition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RequestTrainingDefinition() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::Schola::TrainingDefinitionRequest, ::Schola::TrainingDefinition>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::Schola::TrainingDefinitionRequest, ::Schola::TrainingDefinition>* streamer) {
                       return this->StreamedRequestTrainingDefinition(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RequestTrainingDefinition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RequestTrainingDefinition(::grpc::ServerContext* /*context*/, const ::Schola::TrainingDefinitionRequest* /*request*/, ::Schola::TrainingDefinition* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRequestTrainingDefinition(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::Schola::TrainingDefinitionRequest,::Schola::TrainingDefinition>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StartGymConnector : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_StartGymConnector() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::Schola::GymConnectorStartRequest, ::Schola::GymConnectorStartResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::Schola::GymConnectorStartRequest, ::Schola::GymConnectorStartResponse>* streamer) {
                       return this->StreamedStartGymConnector(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_StartGymConnector() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StartGymConnector(::grpc::ServerContext* /*context*/, const ::Schola::GymConnectorStartRequest* /*request*/, ::Schola::GymConnectorStartResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStartGymConnector(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::Schola::GymConnectorStartRequest,::Schola::GymConnectorStartResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_UpdateState<WithStreamedUnaryMethod_RequestInitialTrainingState<WithStreamedUnaryMethod_RequestTrainingDefinition<WithStreamedUnaryMethod_StartGymConnector<Service > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_UpdateState<WithStreamedUnaryMethod_RequestInitialTrainingState<WithStreamedUnaryMethod_RequestTrainingDefinition<WithStreamedUnaryMethod_StartGymConnector<Service > > > > StreamedService;
};

}  // namespace Schola


#endif  // GRPC_GymConnector_2eproto__INCLUDED
