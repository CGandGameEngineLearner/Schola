// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Definitions.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_Definitions_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_Definitions_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "Spaces.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Definitions_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_Definitions_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Definitions_2eproto;
namespace Schola {
class AgentDefinition;
struct AgentDefinitionDefaultTypeInternal;
extern AgentDefinitionDefaultTypeInternal _AgentDefinition_default_instance_;
class EnvironmentDefinition;
struct EnvironmentDefinitionDefaultTypeInternal;
extern EnvironmentDefinitionDefaultTypeInternal _EnvironmentDefinition_default_instance_;
class EnvironmentDefinition_AgentDefinitionsEntry_DoNotUse;
struct EnvironmentDefinition_AgentDefinitionsEntry_DoNotUseDefaultTypeInternal;
extern EnvironmentDefinition_AgentDefinitionsEntry_DoNotUseDefaultTypeInternal _EnvironmentDefinition_AgentDefinitionsEntry_DoNotUse_default_instance_;
class TrainingDefinition;
struct TrainingDefinitionDefaultTypeInternal;
extern TrainingDefinitionDefaultTypeInternal _TrainingDefinition_default_instance_;
}  // namespace Schola
PROTOBUF_NAMESPACE_OPEN
template<> ::Schola::AgentDefinition* Arena::CreateMaybeMessage<::Schola::AgentDefinition>(Arena*);
template<> ::Schola::EnvironmentDefinition* Arena::CreateMaybeMessage<::Schola::EnvironmentDefinition>(Arena*);
template<> ::Schola::EnvironmentDefinition_AgentDefinitionsEntry_DoNotUse* Arena::CreateMaybeMessage<::Schola::EnvironmentDefinition_AgentDefinitionsEntry_DoNotUse>(Arena*);
template<> ::Schola::TrainingDefinition* Arena::CreateMaybeMessage<::Schola::TrainingDefinition>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace Schola {

// ===================================================================

class AgentDefinition final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Schola.AgentDefinition) */ {
 public:
  inline AgentDefinition() : AgentDefinition(nullptr) {}
  ~AgentDefinition() override;
  explicit PROTOBUF_CONSTEXPR AgentDefinition(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AgentDefinition(const AgentDefinition& from);
  AgentDefinition(AgentDefinition&& from) noexcept
    : AgentDefinition() {
    *this = ::std::move(from);
  }

  inline AgentDefinition& operator=(const AgentDefinition& from) {
    CopyFrom(from);
    return *this;
  }
  inline AgentDefinition& operator=(AgentDefinition&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AgentDefinition& default_instance() {
    return *internal_default_instance();
  }
  static inline const AgentDefinition* internal_default_instance() {
    return reinterpret_cast<const AgentDefinition*>(
               &_AgentDefinition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(AgentDefinition& a, AgentDefinition& b) {
    a.Swap(&b);
  }
  inline void Swap(AgentDefinition* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AgentDefinition* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AgentDefinition* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AgentDefinition>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const AgentDefinition& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const AgentDefinition& from) {
    AgentDefinition::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AgentDefinition* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Schola.AgentDefinition";
  }
  protected:
  explicit AgentDefinition(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kObsSpaceFieldNumber = 2,
    kActionSpaceFieldNumber = 4,
    kNormalizeObsFieldNumber = 6,
    kNormalizeActionsFieldNumber = 7,
  };
  // string name = 1;
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .Schola.DictSpace obs_space = 2;
  bool has_obs_space() const;
  private:
  bool _internal_has_obs_space() const;
  public:
  void clear_obs_space();
  const ::Schola::DictSpace& obs_space() const;
  PROTOBUF_NODISCARD ::Schola::DictSpace* release_obs_space();
  ::Schola::DictSpace* mutable_obs_space();
  void set_allocated_obs_space(::Schola::DictSpace* obs_space);
  private:
  const ::Schola::DictSpace& _internal_obs_space() const;
  ::Schola::DictSpace* _internal_mutable_obs_space();
  public:
  void unsafe_arena_set_allocated_obs_space(
      ::Schola::DictSpace* obs_space);
  ::Schola::DictSpace* unsafe_arena_release_obs_space();

  // .Schola.DictSpace action_space = 4;
  bool has_action_space() const;
  private:
  bool _internal_has_action_space() const;
  public:
  void clear_action_space();
  const ::Schola::DictSpace& action_space() const;
  PROTOBUF_NODISCARD ::Schola::DictSpace* release_action_space();
  ::Schola::DictSpace* mutable_action_space();
  void set_allocated_action_space(::Schola::DictSpace* action_space);
  private:
  const ::Schola::DictSpace& _internal_action_space() const;
  ::Schola::DictSpace* _internal_mutable_action_space();
  public:
  void unsafe_arena_set_allocated_action_space(
      ::Schola::DictSpace* action_space);
  ::Schola::DictSpace* unsafe_arena_release_action_space();

  // bool normalize_obs = 6;
  void clear_normalize_obs();
  bool normalize_obs() const;
  void set_normalize_obs(bool value);
  private:
  bool _internal_normalize_obs() const;
  void _internal_set_normalize_obs(bool value);
  public:

  // bool normalize_actions = 7;
  void clear_normalize_actions();
  bool normalize_actions() const;
  void set_normalize_actions(bool value);
  private:
  bool _internal_normalize_actions() const;
  void _internal_set_normalize_actions(bool value);
  public:

  // @@protoc_insertion_point(class_scope:Schola.AgentDefinition)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    ::Schola::DictSpace* obs_space_;
    ::Schola::DictSpace* action_space_;
    bool normalize_obs_;
    bool normalize_actions_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Definitions_2eproto;
};
// -------------------------------------------------------------------

class EnvironmentDefinition_AgentDefinitionsEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<EnvironmentDefinition_AgentDefinitionsEntry_DoNotUse, 
    int32_t, ::Schola::AgentDefinition,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<EnvironmentDefinition_AgentDefinitionsEntry_DoNotUse, 
    int32_t, ::Schola::AgentDefinition,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> SuperType;
  EnvironmentDefinition_AgentDefinitionsEntry_DoNotUse();
  explicit PROTOBUF_CONSTEXPR EnvironmentDefinition_AgentDefinitionsEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit EnvironmentDefinition_AgentDefinitionsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const EnvironmentDefinition_AgentDefinitionsEntry_DoNotUse& other);
  static const EnvironmentDefinition_AgentDefinitionsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const EnvironmentDefinition_AgentDefinitionsEntry_DoNotUse*>(&_EnvironmentDefinition_AgentDefinitionsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  friend struct ::TableStruct_Definitions_2eproto;
};

// -------------------------------------------------------------------

class EnvironmentDefinition final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Schola.EnvironmentDefinition) */ {
 public:
  inline EnvironmentDefinition() : EnvironmentDefinition(nullptr) {}
  ~EnvironmentDefinition() override;
  explicit PROTOBUF_CONSTEXPR EnvironmentDefinition(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  EnvironmentDefinition(const EnvironmentDefinition& from);
  EnvironmentDefinition(EnvironmentDefinition&& from) noexcept
    : EnvironmentDefinition() {
    *this = ::std::move(from);
  }

  inline EnvironmentDefinition& operator=(const EnvironmentDefinition& from) {
    CopyFrom(from);
    return *this;
  }
  inline EnvironmentDefinition& operator=(EnvironmentDefinition&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EnvironmentDefinition& default_instance() {
    return *internal_default_instance();
  }
  static inline const EnvironmentDefinition* internal_default_instance() {
    return reinterpret_cast<const EnvironmentDefinition*>(
               &_EnvironmentDefinition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(EnvironmentDefinition& a, EnvironmentDefinition& b) {
    a.Swap(&b);
  }
  inline void Swap(EnvironmentDefinition* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EnvironmentDefinition* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EnvironmentDefinition* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EnvironmentDefinition>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const EnvironmentDefinition& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const EnvironmentDefinition& from) {
    EnvironmentDefinition::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EnvironmentDefinition* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Schola.EnvironmentDefinition";
  }
  protected:
  explicit EnvironmentDefinition(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kAgentDefinitionsFieldNumber = 1,
  };
  // map<int32, .Schola.AgentDefinition> agent_definitions = 1;
  int agent_definitions_size() const;
  private:
  int _internal_agent_definitions_size() const;
  public:
  void clear_agent_definitions();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< int32_t, ::Schola::AgentDefinition >&
      _internal_agent_definitions() const;
  ::PROTOBUF_NAMESPACE_ID::Map< int32_t, ::Schola::AgentDefinition >*
      _internal_mutable_agent_definitions();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< int32_t, ::Schola::AgentDefinition >&
      agent_definitions() const;
  ::PROTOBUF_NAMESPACE_ID::Map< int32_t, ::Schola::AgentDefinition >*
      mutable_agent_definitions();

  // @@protoc_insertion_point(class_scope:Schola.EnvironmentDefinition)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::MapField<
        EnvironmentDefinition_AgentDefinitionsEntry_DoNotUse,
        int32_t, ::Schola::AgentDefinition,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> agent_definitions_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Definitions_2eproto;
};
// -------------------------------------------------------------------

class TrainingDefinition final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Schola.TrainingDefinition) */ {
 public:
  inline TrainingDefinition() : TrainingDefinition(nullptr) {}
  ~TrainingDefinition() override;
  explicit PROTOBUF_CONSTEXPR TrainingDefinition(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TrainingDefinition(const TrainingDefinition& from);
  TrainingDefinition(TrainingDefinition&& from) noexcept
    : TrainingDefinition() {
    *this = ::std::move(from);
  }

  inline TrainingDefinition& operator=(const TrainingDefinition& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrainingDefinition& operator=(TrainingDefinition&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TrainingDefinition& default_instance() {
    return *internal_default_instance();
  }
  static inline const TrainingDefinition* internal_default_instance() {
    return reinterpret_cast<const TrainingDefinition*>(
               &_TrainingDefinition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(TrainingDefinition& a, TrainingDefinition& b) {
    a.Swap(&b);
  }
  inline void Swap(TrainingDefinition* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrainingDefinition* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TrainingDefinition* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TrainingDefinition>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const TrainingDefinition& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const TrainingDefinition& from) {
    TrainingDefinition::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrainingDefinition* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Schola.TrainingDefinition";
  }
  protected:
  explicit TrainingDefinition(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEnvironmentDefinitionsFieldNumber = 1,
  };
  // repeated .Schola.EnvironmentDefinition environment_definitions = 1;
  int environment_definitions_size() const;
  private:
  int _internal_environment_definitions_size() const;
  public:
  void clear_environment_definitions();
  ::Schola::EnvironmentDefinition* mutable_environment_definitions(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Schola::EnvironmentDefinition >*
      mutable_environment_definitions();
  private:
  const ::Schola::EnvironmentDefinition& _internal_environment_definitions(int index) const;
  ::Schola::EnvironmentDefinition* _internal_add_environment_definitions();
  public:
  const ::Schola::EnvironmentDefinition& environment_definitions(int index) const;
  ::Schola::EnvironmentDefinition* add_environment_definitions();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Schola::EnvironmentDefinition >&
      environment_definitions() const;

  // @@protoc_insertion_point(class_scope:Schola.TrainingDefinition)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Schola::EnvironmentDefinition > environment_definitions_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Definitions_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AgentDefinition

// string name = 1;
inline void AgentDefinition::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& AgentDefinition::name() const {
  // @@protoc_insertion_point(field_get:Schola.AgentDefinition.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void AgentDefinition::set_name(ArgT0&& arg0, ArgT... args) {
 
 _impl_.name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Schola.AgentDefinition.name)
}
inline std::string* AgentDefinition::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:Schola.AgentDefinition.name)
  return _s;
}
inline const std::string& AgentDefinition::_internal_name() const {
  return _impl_.name_.Get();
}
inline void AgentDefinition::_internal_set_name(const std::string& value) {
  
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* AgentDefinition::_internal_mutable_name() {
  
  return _impl_.name_.Mutable(GetArenaForAllocation());
}
inline std::string* AgentDefinition::release_name() {
  // @@protoc_insertion_point(field_release:Schola.AgentDefinition.name)
  return _impl_.name_.Release();
}
inline void AgentDefinition::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  _impl_.name_.SetAllocated(name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Schola.AgentDefinition.name)
}

// .Schola.DictSpace obs_space = 2;
inline bool AgentDefinition::_internal_has_obs_space() const {
  return this != internal_default_instance() && _impl_.obs_space_ != nullptr;
}
inline bool AgentDefinition::has_obs_space() const {
  return _internal_has_obs_space();
}
inline const ::Schola::DictSpace& AgentDefinition::_internal_obs_space() const {
  const ::Schola::DictSpace* p = _impl_.obs_space_;
  return p != nullptr ? *p : reinterpret_cast<const ::Schola::DictSpace&>(
      ::Schola::_DictSpace_default_instance_);
}
inline const ::Schola::DictSpace& AgentDefinition::obs_space() const {
  // @@protoc_insertion_point(field_get:Schola.AgentDefinition.obs_space)
  return _internal_obs_space();
}
inline void AgentDefinition::unsafe_arena_set_allocated_obs_space(
    ::Schola::DictSpace* obs_space) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.obs_space_);
  }
  _impl_.obs_space_ = obs_space;
  if (obs_space) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Schola.AgentDefinition.obs_space)
}
inline ::Schola::DictSpace* AgentDefinition::release_obs_space() {
  
  ::Schola::DictSpace* temp = _impl_.obs_space_;
  _impl_.obs_space_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::Schola::DictSpace* AgentDefinition::unsafe_arena_release_obs_space() {
  // @@protoc_insertion_point(field_release:Schola.AgentDefinition.obs_space)
  
  ::Schola::DictSpace* temp = _impl_.obs_space_;
  _impl_.obs_space_ = nullptr;
  return temp;
}
inline ::Schola::DictSpace* AgentDefinition::_internal_mutable_obs_space() {
  
  if (_impl_.obs_space_ == nullptr) {
    auto* p = CreateMaybeMessage<::Schola::DictSpace>(GetArenaForAllocation());
    _impl_.obs_space_ = p;
  }
  return _impl_.obs_space_;
}
inline ::Schola::DictSpace* AgentDefinition::mutable_obs_space() {
  ::Schola::DictSpace* _msg = _internal_mutable_obs_space();
  // @@protoc_insertion_point(field_mutable:Schola.AgentDefinition.obs_space)
  return _msg;
}
inline void AgentDefinition::set_allocated_obs_space(::Schola::DictSpace* obs_space) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.obs_space_);
  }
  if (obs_space) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(obs_space));
    if (message_arena != submessage_arena) {
      obs_space = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, obs_space, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.obs_space_ = obs_space;
  // @@protoc_insertion_point(field_set_allocated:Schola.AgentDefinition.obs_space)
}

// .Schola.DictSpace action_space = 4;
inline bool AgentDefinition::_internal_has_action_space() const {
  return this != internal_default_instance() && _impl_.action_space_ != nullptr;
}
inline bool AgentDefinition::has_action_space() const {
  return _internal_has_action_space();
}
inline const ::Schola::DictSpace& AgentDefinition::_internal_action_space() const {
  const ::Schola::DictSpace* p = _impl_.action_space_;
  return p != nullptr ? *p : reinterpret_cast<const ::Schola::DictSpace&>(
      ::Schola::_DictSpace_default_instance_);
}
inline const ::Schola::DictSpace& AgentDefinition::action_space() const {
  // @@protoc_insertion_point(field_get:Schola.AgentDefinition.action_space)
  return _internal_action_space();
}
inline void AgentDefinition::unsafe_arena_set_allocated_action_space(
    ::Schola::DictSpace* action_space) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.action_space_);
  }
  _impl_.action_space_ = action_space;
  if (action_space) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Schola.AgentDefinition.action_space)
}
inline ::Schola::DictSpace* AgentDefinition::release_action_space() {
  
  ::Schola::DictSpace* temp = _impl_.action_space_;
  _impl_.action_space_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::Schola::DictSpace* AgentDefinition::unsafe_arena_release_action_space() {
  // @@protoc_insertion_point(field_release:Schola.AgentDefinition.action_space)
  
  ::Schola::DictSpace* temp = _impl_.action_space_;
  _impl_.action_space_ = nullptr;
  return temp;
}
inline ::Schola::DictSpace* AgentDefinition::_internal_mutable_action_space() {
  
  if (_impl_.action_space_ == nullptr) {
    auto* p = CreateMaybeMessage<::Schola::DictSpace>(GetArenaForAllocation());
    _impl_.action_space_ = p;
  }
  return _impl_.action_space_;
}
inline ::Schola::DictSpace* AgentDefinition::mutable_action_space() {
  ::Schola::DictSpace* _msg = _internal_mutable_action_space();
  // @@protoc_insertion_point(field_mutable:Schola.AgentDefinition.action_space)
  return _msg;
}
inline void AgentDefinition::set_allocated_action_space(::Schola::DictSpace* action_space) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.action_space_);
  }
  if (action_space) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(action_space));
    if (message_arena != submessage_arena) {
      action_space = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, action_space, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.action_space_ = action_space;
  // @@protoc_insertion_point(field_set_allocated:Schola.AgentDefinition.action_space)
}

// bool normalize_obs = 6;
inline void AgentDefinition::clear_normalize_obs() {
  _impl_.normalize_obs_ = false;
}
inline bool AgentDefinition::_internal_normalize_obs() const {
  return _impl_.normalize_obs_;
}
inline bool AgentDefinition::normalize_obs() const {
  // @@protoc_insertion_point(field_get:Schola.AgentDefinition.normalize_obs)
  return _internal_normalize_obs();
}
inline void AgentDefinition::_internal_set_normalize_obs(bool value) {
  
  _impl_.normalize_obs_ = value;
}
inline void AgentDefinition::set_normalize_obs(bool value) {
  _internal_set_normalize_obs(value);
  // @@protoc_insertion_point(field_set:Schola.AgentDefinition.normalize_obs)
}

// bool normalize_actions = 7;
inline void AgentDefinition::clear_normalize_actions() {
  _impl_.normalize_actions_ = false;
}
inline bool AgentDefinition::_internal_normalize_actions() const {
  return _impl_.normalize_actions_;
}
inline bool AgentDefinition::normalize_actions() const {
  // @@protoc_insertion_point(field_get:Schola.AgentDefinition.normalize_actions)
  return _internal_normalize_actions();
}
inline void AgentDefinition::_internal_set_normalize_actions(bool value) {
  
  _impl_.normalize_actions_ = value;
}
inline void AgentDefinition::set_normalize_actions(bool value) {
  _internal_set_normalize_actions(value);
  // @@protoc_insertion_point(field_set:Schola.AgentDefinition.normalize_actions)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// EnvironmentDefinition

// map<int32, .Schola.AgentDefinition> agent_definitions = 1;
inline int EnvironmentDefinition::_internal_agent_definitions_size() const {
  return _impl_.agent_definitions_.size();
}
inline int EnvironmentDefinition::agent_definitions_size() const {
  return _internal_agent_definitions_size();
}
inline void EnvironmentDefinition::clear_agent_definitions() {
  _impl_.agent_definitions_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< int32_t, ::Schola::AgentDefinition >&
EnvironmentDefinition::_internal_agent_definitions() const {
  return _impl_.agent_definitions_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< int32_t, ::Schola::AgentDefinition >&
EnvironmentDefinition::agent_definitions() const {
  // @@protoc_insertion_point(field_map:Schola.EnvironmentDefinition.agent_definitions)
  return _internal_agent_definitions();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< int32_t, ::Schola::AgentDefinition >*
EnvironmentDefinition::_internal_mutable_agent_definitions() {
  return _impl_.agent_definitions_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< int32_t, ::Schola::AgentDefinition >*
EnvironmentDefinition::mutable_agent_definitions() {
  // @@protoc_insertion_point(field_mutable_map:Schola.EnvironmentDefinition.agent_definitions)
  return _internal_mutable_agent_definitions();
}

// -------------------------------------------------------------------

// TrainingDefinition

// repeated .Schola.EnvironmentDefinition environment_definitions = 1;
inline int TrainingDefinition::_internal_environment_definitions_size() const {
  return _impl_.environment_definitions_.size();
}
inline int TrainingDefinition::environment_definitions_size() const {
  return _internal_environment_definitions_size();
}
inline void TrainingDefinition::clear_environment_definitions() {
  _impl_.environment_definitions_.Clear();
}
inline ::Schola::EnvironmentDefinition* TrainingDefinition::mutable_environment_definitions(int index) {
  // @@protoc_insertion_point(field_mutable:Schola.TrainingDefinition.environment_definitions)
  return _impl_.environment_definitions_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Schola::EnvironmentDefinition >*
TrainingDefinition::mutable_environment_definitions() {
  // @@protoc_insertion_point(field_mutable_list:Schola.TrainingDefinition.environment_definitions)
  return &_impl_.environment_definitions_;
}
inline const ::Schola::EnvironmentDefinition& TrainingDefinition::_internal_environment_definitions(int index) const {
  return _impl_.environment_definitions_.Get(index);
}
inline const ::Schola::EnvironmentDefinition& TrainingDefinition::environment_definitions(int index) const {
  // @@protoc_insertion_point(field_get:Schola.TrainingDefinition.environment_definitions)
  return _internal_environment_definitions(index);
}
inline ::Schola::EnvironmentDefinition* TrainingDefinition::_internal_add_environment_definitions() {
  return _impl_.environment_definitions_.Add();
}
inline ::Schola::EnvironmentDefinition* TrainingDefinition::add_environment_definitions() {
  ::Schola::EnvironmentDefinition* _add = _internal_add_environment_definitions();
  // @@protoc_insertion_point(field_add:Schola.TrainingDefinition.environment_definitions)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Schola::EnvironmentDefinition >&
TrainingDefinition::environment_definitions() const {
  // @@protoc_insertion_point(field_list:Schola.TrainingDefinition.environment_definitions)
  return _impl_.environment_definitions_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Schola

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_Definitions_2eproto
