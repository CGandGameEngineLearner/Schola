// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GymConnector.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_GymConnector_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_GymConnector_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "Definitions.pb.h"
#include "State.pb.h"
#include "StateUpdates.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_GymConnector_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_GymConnector_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_GymConnector_2eproto;
namespace Schola {
class EnvironmentReset;
struct EnvironmentResetDefaultTypeInternal;
extern EnvironmentResetDefaultTypeInternal _EnvironmentReset_default_instance_;
class EnvironmentReset_OptionsEntry_DoNotUse;
struct EnvironmentReset_OptionsEntry_DoNotUseDefaultTypeInternal;
extern EnvironmentReset_OptionsEntry_DoNotUseDefaultTypeInternal _EnvironmentReset_OptionsEntry_DoNotUse_default_instance_;
class EnvironmentStateUpdate;
struct EnvironmentStateUpdateDefaultTypeInternal;
extern EnvironmentStateUpdateDefaultTypeInternal _EnvironmentStateUpdate_default_instance_;
class GymConnectorStartRequest;
struct GymConnectorStartRequestDefaultTypeInternal;
extern GymConnectorStartRequestDefaultTypeInternal _GymConnectorStartRequest_default_instance_;
class GymConnectorStartResponse;
struct GymConnectorStartResponseDefaultTypeInternal;
extern GymConnectorStartResponseDefaultTypeInternal _GymConnectorStartResponse_default_instance_;
class InitialTrainingStateRequest;
struct InitialTrainingStateRequestDefaultTypeInternal;
extern InitialTrainingStateRequestDefaultTypeInternal _InitialTrainingStateRequest_default_instance_;
class InitialTrainingStateRequest_EnvironmentStateRequestsEntry_DoNotUse;
struct InitialTrainingStateRequest_EnvironmentStateRequestsEntry_DoNotUseDefaultTypeInternal;
extern InitialTrainingStateRequest_EnvironmentStateRequestsEntry_DoNotUseDefaultTypeInternal _InitialTrainingStateRequest_EnvironmentStateRequestsEntry_DoNotUse_default_instance_;
class InititalEnvironmentStateRequest;
struct InititalEnvironmentStateRequestDefaultTypeInternal;
extern InititalEnvironmentStateRequestDefaultTypeInternal _InititalEnvironmentStateRequest_default_instance_;
class TrainingDefinitionRequest;
struct TrainingDefinitionRequestDefaultTypeInternal;
extern TrainingDefinitionRequestDefaultTypeInternal _TrainingDefinitionRequest_default_instance_;
class TrainingStateUpdate;
struct TrainingStateUpdateDefaultTypeInternal;
extern TrainingStateUpdateDefaultTypeInternal _TrainingStateUpdate_default_instance_;
class TrainingStateUpdate_UpdatesEntry_DoNotUse;
struct TrainingStateUpdate_UpdatesEntry_DoNotUseDefaultTypeInternal;
extern TrainingStateUpdate_UpdatesEntry_DoNotUseDefaultTypeInternal _TrainingStateUpdate_UpdatesEntry_DoNotUse_default_instance_;
}  // namespace Schola
PROTOBUF_NAMESPACE_OPEN
template<> ::Schola::EnvironmentReset* Arena::CreateMaybeMessage<::Schola::EnvironmentReset>(Arena*);
template<> ::Schola::EnvironmentReset_OptionsEntry_DoNotUse* Arena::CreateMaybeMessage<::Schola::EnvironmentReset_OptionsEntry_DoNotUse>(Arena*);
template<> ::Schola::EnvironmentStateUpdate* Arena::CreateMaybeMessage<::Schola::EnvironmentStateUpdate>(Arena*);
template<> ::Schola::GymConnectorStartRequest* Arena::CreateMaybeMessage<::Schola::GymConnectorStartRequest>(Arena*);
template<> ::Schola::GymConnectorStartResponse* Arena::CreateMaybeMessage<::Schola::GymConnectorStartResponse>(Arena*);
template<> ::Schola::InitialTrainingStateRequest* Arena::CreateMaybeMessage<::Schola::InitialTrainingStateRequest>(Arena*);
template<> ::Schola::InitialTrainingStateRequest_EnvironmentStateRequestsEntry_DoNotUse* Arena::CreateMaybeMessage<::Schola::InitialTrainingStateRequest_EnvironmentStateRequestsEntry_DoNotUse>(Arena*);
template<> ::Schola::InititalEnvironmentStateRequest* Arena::CreateMaybeMessage<::Schola::InititalEnvironmentStateRequest>(Arena*);
template<> ::Schola::TrainingDefinitionRequest* Arena::CreateMaybeMessage<::Schola::TrainingDefinitionRequest>(Arena*);
template<> ::Schola::TrainingStateUpdate* Arena::CreateMaybeMessage<::Schola::TrainingStateUpdate>(Arena*);
template<> ::Schola::TrainingStateUpdate_UpdatesEntry_DoNotUse* Arena::CreateMaybeMessage<::Schola::TrainingStateUpdate_UpdatesEntry_DoNotUse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace Schola {

enum CommunicatorStatus : int {
  GOOD = 0,
  ERROR = 1,
  CLOSED = 2,
  CommunicatorStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  CommunicatorStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool CommunicatorStatus_IsValid(int value);
constexpr CommunicatorStatus CommunicatorStatus_MIN = GOOD;
constexpr CommunicatorStatus CommunicatorStatus_MAX = CLOSED;
constexpr int CommunicatorStatus_ARRAYSIZE = CommunicatorStatus_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CommunicatorStatus_descriptor();
template<typename T>
inline const std::string& CommunicatorStatus_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CommunicatorStatus>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CommunicatorStatus_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CommunicatorStatus_descriptor(), enum_t_value);
}
inline bool CommunicatorStatus_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CommunicatorStatus* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CommunicatorStatus>(
    CommunicatorStatus_descriptor(), name, value);
}
// ===================================================================

class EnvironmentReset_OptionsEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<EnvironmentReset_OptionsEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<EnvironmentReset_OptionsEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> SuperType;
  EnvironmentReset_OptionsEntry_DoNotUse();
  explicit PROTOBUF_CONSTEXPR EnvironmentReset_OptionsEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit EnvironmentReset_OptionsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const EnvironmentReset_OptionsEntry_DoNotUse& other);
  static const EnvironmentReset_OptionsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const EnvironmentReset_OptionsEntry_DoNotUse*>(&_EnvironmentReset_OptionsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "Schola.EnvironmentReset.OptionsEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "Schola.EnvironmentReset.OptionsEntry.value");
 }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  friend struct ::TableStruct_GymConnector_2eproto;
};

// -------------------------------------------------------------------

class EnvironmentReset final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Schola.EnvironmentReset) */ {
 public:
  inline EnvironmentReset() : EnvironmentReset(nullptr) {}
  ~EnvironmentReset() override;
  explicit PROTOBUF_CONSTEXPR EnvironmentReset(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  EnvironmentReset(const EnvironmentReset& from);
  EnvironmentReset(EnvironmentReset&& from) noexcept
    : EnvironmentReset() {
    *this = ::std::move(from);
  }

  inline EnvironmentReset& operator=(const EnvironmentReset& from) {
    CopyFrom(from);
    return *this;
  }
  inline EnvironmentReset& operator=(EnvironmentReset&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EnvironmentReset& default_instance() {
    return *internal_default_instance();
  }
  enum OptionalSeedCase {
    kSeed = 1,
    OPTIONAL_SEED_NOT_SET = 0,
  };

  static inline const EnvironmentReset* internal_default_instance() {
    return reinterpret_cast<const EnvironmentReset*>(
               &_EnvironmentReset_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(EnvironmentReset& a, EnvironmentReset& b) {
    a.Swap(&b);
  }
  inline void Swap(EnvironmentReset* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EnvironmentReset* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EnvironmentReset* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EnvironmentReset>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const EnvironmentReset& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const EnvironmentReset& from) {
    EnvironmentReset::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EnvironmentReset* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Schola.EnvironmentReset";
  }
  protected:
  explicit EnvironmentReset(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kOptionsFieldNumber = 2,
    kSeedFieldNumber = 1,
  };
  // map<string, string> options = 2;
  int options_size() const;
  private:
  int _internal_options_size() const;
  public:
  void clear_options();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
      _internal_options() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
      _internal_mutable_options();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
      options() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
      mutable_options();

  // int32 seed = 1;
  bool has_seed() const;
  private:
  bool _internal_has_seed() const;
  public:
  void clear_seed();
  int32_t seed() const;
  void set_seed(int32_t value);
  private:
  int32_t _internal_seed() const;
  void _internal_set_seed(int32_t value);
  public:

  void clear_optional_seed();
  OptionalSeedCase optional_seed_case() const;
  // @@protoc_insertion_point(class_scope:Schola.EnvironmentReset)
 private:
  class _Internal;
  void set_has_seed();

  inline bool has_optional_seed() const;
  inline void clear_has_optional_seed();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::MapField<
        EnvironmentReset_OptionsEntry_DoNotUse,
        std::string, std::string,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> options_;
    union OptionalSeedUnion {
      constexpr OptionalSeedUnion() : _constinit_{} {}
        ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
      int32_t seed_;
    } optional_seed_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t _oneof_case_[1];

  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_GymConnector_2eproto;
};
// -------------------------------------------------------------------

class EnvironmentStateUpdate final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Schola.EnvironmentStateUpdate) */ {
 public:
  inline EnvironmentStateUpdate() : EnvironmentStateUpdate(nullptr) {}
  ~EnvironmentStateUpdate() override;
  explicit PROTOBUF_CONSTEXPR EnvironmentStateUpdate(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  EnvironmentStateUpdate(const EnvironmentStateUpdate& from);
  EnvironmentStateUpdate(EnvironmentStateUpdate&& from) noexcept
    : EnvironmentStateUpdate() {
    *this = ::std::move(from);
  }

  inline EnvironmentStateUpdate& operator=(const EnvironmentStateUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline EnvironmentStateUpdate& operator=(EnvironmentStateUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EnvironmentStateUpdate& default_instance() {
    return *internal_default_instance();
  }
  enum UpdateMsgCase {
    kReset = 1,
    kStep = 2,
    UPDATE_MSG_NOT_SET = 0,
  };

  static inline const EnvironmentStateUpdate* internal_default_instance() {
    return reinterpret_cast<const EnvironmentStateUpdate*>(
               &_EnvironmentStateUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(EnvironmentStateUpdate& a, EnvironmentStateUpdate& b) {
    a.Swap(&b);
  }
  inline void Swap(EnvironmentStateUpdate* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EnvironmentStateUpdate* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EnvironmentStateUpdate* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EnvironmentStateUpdate>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const EnvironmentStateUpdate& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const EnvironmentStateUpdate& from) {
    EnvironmentStateUpdate::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EnvironmentStateUpdate* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Schola.EnvironmentStateUpdate";
  }
  protected:
  explicit EnvironmentStateUpdate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResetFieldNumber = 1,
    kStepFieldNumber = 2,
  };
  // .Schola.EnvironmentReset reset = 1;
  bool has_reset() const;
  private:
  bool _internal_has_reset() const;
  public:
  void clear_reset();
  const ::Schola::EnvironmentReset& reset() const;
  PROTOBUF_NODISCARD ::Schola::EnvironmentReset* release_reset();
  ::Schola::EnvironmentReset* mutable_reset();
  void set_allocated_reset(::Schola::EnvironmentReset* reset);
  private:
  const ::Schola::EnvironmentReset& _internal_reset() const;
  ::Schola::EnvironmentReset* _internal_mutable_reset();
  public:
  void unsafe_arena_set_allocated_reset(
      ::Schola::EnvironmentReset* reset);
  ::Schola::EnvironmentReset* unsafe_arena_release_reset();

  // .Schola.EnvironmentStep step = 2;
  bool has_step() const;
  private:
  bool _internal_has_step() const;
  public:
  void clear_step();
  const ::Schola::EnvironmentStep& step() const;
  PROTOBUF_NODISCARD ::Schola::EnvironmentStep* release_step();
  ::Schola::EnvironmentStep* mutable_step();
  void set_allocated_step(::Schola::EnvironmentStep* step);
  private:
  const ::Schola::EnvironmentStep& _internal_step() const;
  ::Schola::EnvironmentStep* _internal_mutable_step();
  public:
  void unsafe_arena_set_allocated_step(
      ::Schola::EnvironmentStep* step);
  ::Schola::EnvironmentStep* unsafe_arena_release_step();

  void clear_update_msg();
  UpdateMsgCase update_msg_case() const;
  // @@protoc_insertion_point(class_scope:Schola.EnvironmentStateUpdate)
 private:
  class _Internal;
  void set_has_reset();
  void set_has_step();

  inline bool has_update_msg() const;
  inline void clear_has_update_msg();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    union UpdateMsgUnion {
      constexpr UpdateMsgUnion() : _constinit_{} {}
        ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
      ::Schola::EnvironmentReset* reset_;
      ::Schola::EnvironmentStep* step_;
    } update_msg_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t _oneof_case_[1];

  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_GymConnector_2eproto;
};
// -------------------------------------------------------------------

class TrainingStateUpdate_UpdatesEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TrainingStateUpdate_UpdatesEntry_DoNotUse, 
    int32_t, ::Schola::EnvironmentStateUpdate,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TrainingStateUpdate_UpdatesEntry_DoNotUse, 
    int32_t, ::Schola::EnvironmentStateUpdate,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> SuperType;
  TrainingStateUpdate_UpdatesEntry_DoNotUse();
  explicit PROTOBUF_CONSTEXPR TrainingStateUpdate_UpdatesEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit TrainingStateUpdate_UpdatesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const TrainingStateUpdate_UpdatesEntry_DoNotUse& other);
  static const TrainingStateUpdate_UpdatesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TrainingStateUpdate_UpdatesEntry_DoNotUse*>(&_TrainingStateUpdate_UpdatesEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  friend struct ::TableStruct_GymConnector_2eproto;
};

// -------------------------------------------------------------------

class TrainingStateUpdate final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Schola.TrainingStateUpdate) */ {
 public:
  inline TrainingStateUpdate() : TrainingStateUpdate(nullptr) {}
  ~TrainingStateUpdate() override;
  explicit PROTOBUF_CONSTEXPR TrainingStateUpdate(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TrainingStateUpdate(const TrainingStateUpdate& from);
  TrainingStateUpdate(TrainingStateUpdate&& from) noexcept
    : TrainingStateUpdate() {
    *this = ::std::move(from);
  }

  inline TrainingStateUpdate& operator=(const TrainingStateUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrainingStateUpdate& operator=(TrainingStateUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TrainingStateUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const TrainingStateUpdate* internal_default_instance() {
    return reinterpret_cast<const TrainingStateUpdate*>(
               &_TrainingStateUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(TrainingStateUpdate& a, TrainingStateUpdate& b) {
    a.Swap(&b);
  }
  inline void Swap(TrainingStateUpdate* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrainingStateUpdate* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TrainingStateUpdate* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TrainingStateUpdate>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const TrainingStateUpdate& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const TrainingStateUpdate& from) {
    TrainingStateUpdate::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrainingStateUpdate* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Schola.TrainingStateUpdate";
  }
  protected:
  explicit TrainingStateUpdate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kUpdatesFieldNumber = 1,
    kStatusFieldNumber = 2,
  };
  // map<int32, .Schola.EnvironmentStateUpdate> updates = 1;
  int updates_size() const;
  private:
  int _internal_updates_size() const;
  public:
  void clear_updates();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< int32_t, ::Schola::EnvironmentStateUpdate >&
      _internal_updates() const;
  ::PROTOBUF_NAMESPACE_ID::Map< int32_t, ::Schola::EnvironmentStateUpdate >*
      _internal_mutable_updates();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< int32_t, ::Schola::EnvironmentStateUpdate >&
      updates() const;
  ::PROTOBUF_NAMESPACE_ID::Map< int32_t, ::Schola::EnvironmentStateUpdate >*
      mutable_updates();

  // .Schola.CommunicatorStatus status = 2;
  void clear_status();
  ::Schola::CommunicatorStatus status() const;
  void set_status(::Schola::CommunicatorStatus value);
  private:
  ::Schola::CommunicatorStatus _internal_status() const;
  void _internal_set_status(::Schola::CommunicatorStatus value);
  public:

  // @@protoc_insertion_point(class_scope:Schola.TrainingStateUpdate)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::MapField<
        TrainingStateUpdate_UpdatesEntry_DoNotUse,
        int32_t, ::Schola::EnvironmentStateUpdate,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> updates_;
    int status_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_GymConnector_2eproto;
};
// -------------------------------------------------------------------

class TrainingDefinitionRequest final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:Schola.TrainingDefinitionRequest) */ {
 public:
  inline TrainingDefinitionRequest() : TrainingDefinitionRequest(nullptr) {}
  explicit PROTOBUF_CONSTEXPR TrainingDefinitionRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TrainingDefinitionRequest(const TrainingDefinitionRequest& from);
  TrainingDefinitionRequest(TrainingDefinitionRequest&& from) noexcept
    : TrainingDefinitionRequest() {
    *this = ::std::move(from);
  }

  inline TrainingDefinitionRequest& operator=(const TrainingDefinitionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrainingDefinitionRequest& operator=(TrainingDefinitionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TrainingDefinitionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const TrainingDefinitionRequest* internal_default_instance() {
    return reinterpret_cast<const TrainingDefinitionRequest*>(
               &_TrainingDefinitionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(TrainingDefinitionRequest& a, TrainingDefinitionRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(TrainingDefinitionRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrainingDefinitionRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TrainingDefinitionRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TrainingDefinitionRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const TrainingDefinitionRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const TrainingDefinitionRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Schola.TrainingDefinitionRequest";
  }
  protected:
  explicit TrainingDefinitionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Schola.TrainingDefinitionRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_GymConnector_2eproto;
};
// -------------------------------------------------------------------

class GymConnectorStartRequest final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:Schola.GymConnectorStartRequest) */ {
 public:
  inline GymConnectorStartRequest() : GymConnectorStartRequest(nullptr) {}
  explicit PROTOBUF_CONSTEXPR GymConnectorStartRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GymConnectorStartRequest(const GymConnectorStartRequest& from);
  GymConnectorStartRequest(GymConnectorStartRequest&& from) noexcept
    : GymConnectorStartRequest() {
    *this = ::std::move(from);
  }

  inline GymConnectorStartRequest& operator=(const GymConnectorStartRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GymConnectorStartRequest& operator=(GymConnectorStartRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GymConnectorStartRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GymConnectorStartRequest* internal_default_instance() {
    return reinterpret_cast<const GymConnectorStartRequest*>(
               &_GymConnectorStartRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(GymConnectorStartRequest& a, GymConnectorStartRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GymConnectorStartRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GymConnectorStartRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GymConnectorStartRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GymConnectorStartRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GymConnectorStartRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GymConnectorStartRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Schola.GymConnectorStartRequest";
  }
  protected:
  explicit GymConnectorStartRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Schola.GymConnectorStartRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_GymConnector_2eproto;
};
// -------------------------------------------------------------------

class GymConnectorStartResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:Schola.GymConnectorStartResponse) */ {
 public:
  inline GymConnectorStartResponse() : GymConnectorStartResponse(nullptr) {}
  explicit PROTOBUF_CONSTEXPR GymConnectorStartResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GymConnectorStartResponse(const GymConnectorStartResponse& from);
  GymConnectorStartResponse(GymConnectorStartResponse&& from) noexcept
    : GymConnectorStartResponse() {
    *this = ::std::move(from);
  }

  inline GymConnectorStartResponse& operator=(const GymConnectorStartResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GymConnectorStartResponse& operator=(GymConnectorStartResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GymConnectorStartResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GymConnectorStartResponse* internal_default_instance() {
    return reinterpret_cast<const GymConnectorStartResponse*>(
               &_GymConnectorStartResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(GymConnectorStartResponse& a, GymConnectorStartResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GymConnectorStartResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GymConnectorStartResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GymConnectorStartResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GymConnectorStartResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GymConnectorStartResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GymConnectorStartResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Schola.GymConnectorStartResponse";
  }
  protected:
  explicit GymConnectorStartResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Schola.GymConnectorStartResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_GymConnector_2eproto;
};
// -------------------------------------------------------------------

class InititalEnvironmentStateRequest final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:Schola.InititalEnvironmentStateRequest) */ {
 public:
  inline InititalEnvironmentStateRequest() : InititalEnvironmentStateRequest(nullptr) {}
  explicit PROTOBUF_CONSTEXPR InititalEnvironmentStateRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  InititalEnvironmentStateRequest(const InititalEnvironmentStateRequest& from);
  InititalEnvironmentStateRequest(InititalEnvironmentStateRequest&& from) noexcept
    : InititalEnvironmentStateRequest() {
    *this = ::std::move(from);
  }

  inline InititalEnvironmentStateRequest& operator=(const InititalEnvironmentStateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline InititalEnvironmentStateRequest& operator=(InititalEnvironmentStateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InititalEnvironmentStateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const InititalEnvironmentStateRequest* internal_default_instance() {
    return reinterpret_cast<const InititalEnvironmentStateRequest*>(
               &_InititalEnvironmentStateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(InititalEnvironmentStateRequest& a, InititalEnvironmentStateRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(InititalEnvironmentStateRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InititalEnvironmentStateRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InititalEnvironmentStateRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<InititalEnvironmentStateRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const InititalEnvironmentStateRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const InititalEnvironmentStateRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Schola.InititalEnvironmentStateRequest";
  }
  protected:
  explicit InititalEnvironmentStateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Schola.InititalEnvironmentStateRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_GymConnector_2eproto;
};
// -------------------------------------------------------------------

class InitialTrainingStateRequest_EnvironmentStateRequestsEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<InitialTrainingStateRequest_EnvironmentStateRequestsEntry_DoNotUse, 
    int32_t, ::Schola::InititalEnvironmentStateRequest,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<InitialTrainingStateRequest_EnvironmentStateRequestsEntry_DoNotUse, 
    int32_t, ::Schola::InititalEnvironmentStateRequest,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> SuperType;
  InitialTrainingStateRequest_EnvironmentStateRequestsEntry_DoNotUse();
  explicit PROTOBUF_CONSTEXPR InitialTrainingStateRequest_EnvironmentStateRequestsEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit InitialTrainingStateRequest_EnvironmentStateRequestsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const InitialTrainingStateRequest_EnvironmentStateRequestsEntry_DoNotUse& other);
  static const InitialTrainingStateRequest_EnvironmentStateRequestsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const InitialTrainingStateRequest_EnvironmentStateRequestsEntry_DoNotUse*>(&_InitialTrainingStateRequest_EnvironmentStateRequestsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  friend struct ::TableStruct_GymConnector_2eproto;
};

// -------------------------------------------------------------------

class InitialTrainingStateRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Schola.InitialTrainingStateRequest) */ {
 public:
  inline InitialTrainingStateRequest() : InitialTrainingStateRequest(nullptr) {}
  ~InitialTrainingStateRequest() override;
  explicit PROTOBUF_CONSTEXPR InitialTrainingStateRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  InitialTrainingStateRequest(const InitialTrainingStateRequest& from);
  InitialTrainingStateRequest(InitialTrainingStateRequest&& from) noexcept
    : InitialTrainingStateRequest() {
    *this = ::std::move(from);
  }

  inline InitialTrainingStateRequest& operator=(const InitialTrainingStateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline InitialTrainingStateRequest& operator=(InitialTrainingStateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InitialTrainingStateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const InitialTrainingStateRequest* internal_default_instance() {
    return reinterpret_cast<const InitialTrainingStateRequest*>(
               &_InitialTrainingStateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(InitialTrainingStateRequest& a, InitialTrainingStateRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(InitialTrainingStateRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InitialTrainingStateRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InitialTrainingStateRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<InitialTrainingStateRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const InitialTrainingStateRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const InitialTrainingStateRequest& from) {
    InitialTrainingStateRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InitialTrainingStateRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Schola.InitialTrainingStateRequest";
  }
  protected:
  explicit InitialTrainingStateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kEnvironmentStateRequestsFieldNumber = 1,
  };
  // map<int32, .Schola.InititalEnvironmentStateRequest> environment_state_requests = 1;
  int environment_state_requests_size() const;
  private:
  int _internal_environment_state_requests_size() const;
  public:
  void clear_environment_state_requests();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< int32_t, ::Schola::InititalEnvironmentStateRequest >&
      _internal_environment_state_requests() const;
  ::PROTOBUF_NAMESPACE_ID::Map< int32_t, ::Schola::InititalEnvironmentStateRequest >*
      _internal_mutable_environment_state_requests();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< int32_t, ::Schola::InititalEnvironmentStateRequest >&
      environment_state_requests() const;
  ::PROTOBUF_NAMESPACE_ID::Map< int32_t, ::Schola::InititalEnvironmentStateRequest >*
      mutable_environment_state_requests();

  // @@protoc_insertion_point(class_scope:Schola.InitialTrainingStateRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::MapField<
        InitialTrainingStateRequest_EnvironmentStateRequestsEntry_DoNotUse,
        int32_t, ::Schola::InititalEnvironmentStateRequest,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> environment_state_requests_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_GymConnector_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// EnvironmentReset

// int32 seed = 1;
inline bool EnvironmentReset::_internal_has_seed() const {
  return optional_seed_case() == kSeed;
}
inline bool EnvironmentReset::has_seed() const {
  return _internal_has_seed();
}
inline void EnvironmentReset::set_has_seed() {
  _impl_._oneof_case_[0] = kSeed;
}
inline void EnvironmentReset::clear_seed() {
  if (_internal_has_seed()) {
    _impl_.optional_seed_.seed_ = 0;
    clear_has_optional_seed();
  }
}
inline int32_t EnvironmentReset::_internal_seed() const {
  if (_internal_has_seed()) {
    return _impl_.optional_seed_.seed_;
  }
  return 0;
}
inline void EnvironmentReset::_internal_set_seed(int32_t value) {
  if (!_internal_has_seed()) {
    clear_optional_seed();
    set_has_seed();
  }
  _impl_.optional_seed_.seed_ = value;
}
inline int32_t EnvironmentReset::seed() const {
  // @@protoc_insertion_point(field_get:Schola.EnvironmentReset.seed)
  return _internal_seed();
}
inline void EnvironmentReset::set_seed(int32_t value) {
  _internal_set_seed(value);
  // @@protoc_insertion_point(field_set:Schola.EnvironmentReset.seed)
}

// map<string, string> options = 2;
inline int EnvironmentReset::_internal_options_size() const {
  return _impl_.options_.size();
}
inline int EnvironmentReset::options_size() const {
  return _internal_options_size();
}
inline void EnvironmentReset::clear_options() {
  _impl_.options_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
EnvironmentReset::_internal_options() const {
  return _impl_.options_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
EnvironmentReset::options() const {
  // @@protoc_insertion_point(field_map:Schola.EnvironmentReset.options)
  return _internal_options();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
EnvironmentReset::_internal_mutable_options() {
  return _impl_.options_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
EnvironmentReset::mutable_options() {
  // @@protoc_insertion_point(field_mutable_map:Schola.EnvironmentReset.options)
  return _internal_mutable_options();
}

inline bool EnvironmentReset::has_optional_seed() const {
  return optional_seed_case() != OPTIONAL_SEED_NOT_SET;
}
inline void EnvironmentReset::clear_has_optional_seed() {
  _impl_._oneof_case_[0] = OPTIONAL_SEED_NOT_SET;
}
inline EnvironmentReset::OptionalSeedCase EnvironmentReset::optional_seed_case() const {
  return EnvironmentReset::OptionalSeedCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// EnvironmentStateUpdate

// .Schola.EnvironmentReset reset = 1;
inline bool EnvironmentStateUpdate::_internal_has_reset() const {
  return update_msg_case() == kReset;
}
inline bool EnvironmentStateUpdate::has_reset() const {
  return _internal_has_reset();
}
inline void EnvironmentStateUpdate::set_has_reset() {
  _impl_._oneof_case_[0] = kReset;
}
inline void EnvironmentStateUpdate::clear_reset() {
  if (_internal_has_reset()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.update_msg_.reset_;
    }
    clear_has_update_msg();
  }
}
inline ::Schola::EnvironmentReset* EnvironmentStateUpdate::release_reset() {
  // @@protoc_insertion_point(field_release:Schola.EnvironmentStateUpdate.reset)
  if (_internal_has_reset()) {
    clear_has_update_msg();
    ::Schola::EnvironmentReset* temp = _impl_.update_msg_.reset_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.update_msg_.reset_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Schola::EnvironmentReset& EnvironmentStateUpdate::_internal_reset() const {
  return _internal_has_reset()
      ? *_impl_.update_msg_.reset_
      : reinterpret_cast< ::Schola::EnvironmentReset&>(::Schola::_EnvironmentReset_default_instance_);
}
inline const ::Schola::EnvironmentReset& EnvironmentStateUpdate::reset() const {
  // @@protoc_insertion_point(field_get:Schola.EnvironmentStateUpdate.reset)
  return _internal_reset();
}
inline ::Schola::EnvironmentReset* EnvironmentStateUpdate::unsafe_arena_release_reset() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Schola.EnvironmentStateUpdate.reset)
  if (_internal_has_reset()) {
    clear_has_update_msg();
    ::Schola::EnvironmentReset* temp = _impl_.update_msg_.reset_;
    _impl_.update_msg_.reset_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void EnvironmentStateUpdate::unsafe_arena_set_allocated_reset(::Schola::EnvironmentReset* reset) {
  clear_update_msg();
  if (reset) {
    set_has_reset();
    _impl_.update_msg_.reset_ = reset;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Schola.EnvironmentStateUpdate.reset)
}
inline ::Schola::EnvironmentReset* EnvironmentStateUpdate::_internal_mutable_reset() {
  if (!_internal_has_reset()) {
    clear_update_msg();
    set_has_reset();
    _impl_.update_msg_.reset_ = CreateMaybeMessage< ::Schola::EnvironmentReset >(GetArenaForAllocation());
  }
  return _impl_.update_msg_.reset_;
}
inline ::Schola::EnvironmentReset* EnvironmentStateUpdate::mutable_reset() {
  ::Schola::EnvironmentReset* _msg = _internal_mutable_reset();
  // @@protoc_insertion_point(field_mutable:Schola.EnvironmentStateUpdate.reset)
  return _msg;
}

// .Schola.EnvironmentStep step = 2;
inline bool EnvironmentStateUpdate::_internal_has_step() const {
  return update_msg_case() == kStep;
}
inline bool EnvironmentStateUpdate::has_step() const {
  return _internal_has_step();
}
inline void EnvironmentStateUpdate::set_has_step() {
  _impl_._oneof_case_[0] = kStep;
}
inline ::Schola::EnvironmentStep* EnvironmentStateUpdate::release_step() {
  // @@protoc_insertion_point(field_release:Schola.EnvironmentStateUpdate.step)
  if (_internal_has_step()) {
    clear_has_update_msg();
    ::Schola::EnvironmentStep* temp = _impl_.update_msg_.step_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.update_msg_.step_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Schola::EnvironmentStep& EnvironmentStateUpdate::_internal_step() const {
  return _internal_has_step()
      ? *_impl_.update_msg_.step_
      : reinterpret_cast< ::Schola::EnvironmentStep&>(::Schola::_EnvironmentStep_default_instance_);
}
inline const ::Schola::EnvironmentStep& EnvironmentStateUpdate::step() const {
  // @@protoc_insertion_point(field_get:Schola.EnvironmentStateUpdate.step)
  return _internal_step();
}
inline ::Schola::EnvironmentStep* EnvironmentStateUpdate::unsafe_arena_release_step() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Schola.EnvironmentStateUpdate.step)
  if (_internal_has_step()) {
    clear_has_update_msg();
    ::Schola::EnvironmentStep* temp = _impl_.update_msg_.step_;
    _impl_.update_msg_.step_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void EnvironmentStateUpdate::unsafe_arena_set_allocated_step(::Schola::EnvironmentStep* step) {
  clear_update_msg();
  if (step) {
    set_has_step();
    _impl_.update_msg_.step_ = step;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Schola.EnvironmentStateUpdate.step)
}
inline ::Schola::EnvironmentStep* EnvironmentStateUpdate::_internal_mutable_step() {
  if (!_internal_has_step()) {
    clear_update_msg();
    set_has_step();
    _impl_.update_msg_.step_ = CreateMaybeMessage< ::Schola::EnvironmentStep >(GetArenaForAllocation());
  }
  return _impl_.update_msg_.step_;
}
inline ::Schola::EnvironmentStep* EnvironmentStateUpdate::mutable_step() {
  ::Schola::EnvironmentStep* _msg = _internal_mutable_step();
  // @@protoc_insertion_point(field_mutable:Schola.EnvironmentStateUpdate.step)
  return _msg;
}

inline bool EnvironmentStateUpdate::has_update_msg() const {
  return update_msg_case() != UPDATE_MSG_NOT_SET;
}
inline void EnvironmentStateUpdate::clear_has_update_msg() {
  _impl_._oneof_case_[0] = UPDATE_MSG_NOT_SET;
}
inline EnvironmentStateUpdate::UpdateMsgCase EnvironmentStateUpdate::update_msg_case() const {
  return EnvironmentStateUpdate::UpdateMsgCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// TrainingStateUpdate

// map<int32, .Schola.EnvironmentStateUpdate> updates = 1;
inline int TrainingStateUpdate::_internal_updates_size() const {
  return _impl_.updates_.size();
}
inline int TrainingStateUpdate::updates_size() const {
  return _internal_updates_size();
}
inline void TrainingStateUpdate::clear_updates() {
  _impl_.updates_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< int32_t, ::Schola::EnvironmentStateUpdate >&
TrainingStateUpdate::_internal_updates() const {
  return _impl_.updates_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< int32_t, ::Schola::EnvironmentStateUpdate >&
TrainingStateUpdate::updates() const {
  // @@protoc_insertion_point(field_map:Schola.TrainingStateUpdate.updates)
  return _internal_updates();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< int32_t, ::Schola::EnvironmentStateUpdate >*
TrainingStateUpdate::_internal_mutable_updates() {
  return _impl_.updates_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< int32_t, ::Schola::EnvironmentStateUpdate >*
TrainingStateUpdate::mutable_updates() {
  // @@protoc_insertion_point(field_mutable_map:Schola.TrainingStateUpdate.updates)
  return _internal_mutable_updates();
}

// .Schola.CommunicatorStatus status = 2;
inline void TrainingStateUpdate::clear_status() {
  _impl_.status_ = 0;
}
inline ::Schola::CommunicatorStatus TrainingStateUpdate::_internal_status() const {
  return static_cast< ::Schola::CommunicatorStatus >(_impl_.status_);
}
inline ::Schola::CommunicatorStatus TrainingStateUpdate::status() const {
  // @@protoc_insertion_point(field_get:Schola.TrainingStateUpdate.status)
  return _internal_status();
}
inline void TrainingStateUpdate::_internal_set_status(::Schola::CommunicatorStatus value) {
  
  _impl_.status_ = value;
}
inline void TrainingStateUpdate::set_status(::Schola::CommunicatorStatus value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:Schola.TrainingStateUpdate.status)
}

// -------------------------------------------------------------------

// TrainingDefinitionRequest

// -------------------------------------------------------------------

// GymConnectorStartRequest

// -------------------------------------------------------------------

// GymConnectorStartResponse

// -------------------------------------------------------------------

// InititalEnvironmentStateRequest

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// InitialTrainingStateRequest

// map<int32, .Schola.InititalEnvironmentStateRequest> environment_state_requests = 1;
inline int InitialTrainingStateRequest::_internal_environment_state_requests_size() const {
  return _impl_.environment_state_requests_.size();
}
inline int InitialTrainingStateRequest::environment_state_requests_size() const {
  return _internal_environment_state_requests_size();
}
inline void InitialTrainingStateRequest::clear_environment_state_requests() {
  _impl_.environment_state_requests_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< int32_t, ::Schola::InititalEnvironmentStateRequest >&
InitialTrainingStateRequest::_internal_environment_state_requests() const {
  return _impl_.environment_state_requests_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< int32_t, ::Schola::InititalEnvironmentStateRequest >&
InitialTrainingStateRequest::environment_state_requests() const {
  // @@protoc_insertion_point(field_map:Schola.InitialTrainingStateRequest.environment_state_requests)
  return _internal_environment_state_requests();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< int32_t, ::Schola::InititalEnvironmentStateRequest >*
InitialTrainingStateRequest::_internal_mutable_environment_state_requests() {
  return _impl_.environment_state_requests_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< int32_t, ::Schola::InititalEnvironmentStateRequest >*
InitialTrainingStateRequest::mutable_environment_state_requests() {
  // @@protoc_insertion_point(field_mutable_map:Schola.InitialTrainingStateRequest.environment_state_requests)
  return _internal_mutable_environment_state_requests();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Schola

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::Schola::CommunicatorStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Schola::CommunicatorStatus>() {
  return ::Schola::CommunicatorStatus_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_GymConnector_2eproto
