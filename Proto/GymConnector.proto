# Copyright (c) 2024 Advanced Micro Devices, Inc. All Rights Reserved.
syntax = "proto3";


package Schola;

import "Definitions.proto";
import "State.proto";
import "StateUpdates.proto";

enum CommunicatorStatus {
    GOOD = 0; //Can't use running here because protobuf doesn't like repeated enums in the same namespace
    ERROR = 1;
    CLOSED = 2;
}

message EnvironmentReset {
    //Doing this instead of optional here for pyi support
    oneof optional_seed {
        int32 seed = 1;
    }
    map<string,string> options = 2;
}

message EnvironmentStateUpdate 
{
    oneof update_msg {
        EnvironmentReset reset = 1;
        EnvironmentStep step = 2;
    }
}

message TrainingStateUpdate {
    map<int32, EnvironmentStateUpdate> updates = 1;
    CommunicatorStatus status = 2;
}

message TrainingDefinitionRequest {}

message GymConnectorStartRequest {}

//this could potentially get an observation at some point
message GymConnectorStartResponse {}

message InititalEnvironmentStateRequest {}

message InitialTrainingStateRequest {
    map<int32,InititalEnvironmentStateRequest> environment_state_requests = 1;
}

service GymService {
  rpc UpdateState(TrainingStateUpdate) returns (TrainingState);
  rpc RequestInitialTrainingState(InitialTrainingStateRequest) returns (InitialTrainingState);
  rpc RequestTrainingDefinition(TrainingDefinitionRequest) returns (TrainingDefinition);
  rpc StartGymConnector(GymConnectorStartRequest) returns (GymConnectorStartResponse);
}